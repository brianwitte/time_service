Write a module named `TimeService`, that has 2 classes, an initialize method and can be 
receive configuration params with a block.

Requirements:
  • Use Ruby, and write production quality code.
  • Your module name should be `TimeService` and not inherit from another module. 
  • Must have 2 classes within the module 
  • One class must inherit from the other 
  • One classe must have an initialize method 
  • Must be able to initialize with a block 
  
  
Within the subclass write a method that accepts two mandatory arguments and returns a result.

Requirements:
  • Use Ruby, and write production quality code.
  • Your function or method should not use any date/time library.
  • The first argument is a time value in the form of a string with the following 
    format: [H]H:MM {AM|PM}.
  • The second argument is the number of minutes, as an integer value.
  • The return value of the function should be a string of the same format as the first 
    argument, which is a result of adding the minutes to the time.
    
    o For example add_minutes('9:13 AM', 10) would return 9:23 AM.
    
- Create a readme file

- In the readme file, comment on if you were to iterate on this, what would you add? Why? 

- Save to a github repo and send the link to the code for review

Additional Notes:
  • We just want to see how you code, so this exercise is not meant to be too hard or take too long.
  • If you spend an hour on this, stop coding and finalize by adding some notes about what you would do if you had more time.
